{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahv\\\\Documents\\\\real-time-traffic\\\\frontend\\\\src\\\\components\\\\PieChart.js\",\n  _s = $RefreshSig$();\n// src/components/PieChart.js\nimport React, { useState, useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PieChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Traffic Conditions',\n      data: [],\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\n      borderWidth: 1\n    }]\n  });\n  const fetchTrafficConditionData = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/traffic_data/conditions');\n      const data = await response.json();\n      if (data && typeof data === 'object' && !Array.isArray(data)) {\n        setChartData(prevData => ({\n          ...prevData,\n          labels: Object.keys(data),\n          datasets: prevData.datasets.map(dataset => ({\n            ...dataset,\n            data: Object.values(data)\n          }))\n        }));\n      }\n    } catch (error) {\n      console.error('Error fetching traffic condition data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTrafficConditionData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Traffic Condition Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(PieChart, \"O7cWUk2J0y4FaOP6Pw+kuuFj9SQ=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","useState","useEffect","Pie","Chart","ChartJS","jsxDEV","_jsxDEV","PieChart","_s","chartData","setChartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","fetchTrafficConditionData","response","fetch","json","Array","isArray","prevData","Object","keys","map","dataset","values","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shahv/Documents/real-time-traffic/frontend/src/components/PieChart.js"],"sourcesContent":["// src/components/PieChart.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS } from 'chart.js/auto';\r\n\r\nconst PieChart = () => {\r\n    const [chartData, setChartData] = useState({\r\n        labels: [],\r\n        datasets: [{\r\n            label: 'Traffic Conditions',\r\n            data: [],\r\n            backgroundColor: [\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n            ],\r\n            borderColor: [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n        }],\r\n    });\r\n\r\n    const fetchTrafficConditionData = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/traffic_data/conditions');\r\n            const data = await response.json();\r\n            if (data && typeof data === 'object' && !Array.isArray(data)) {\r\n                setChartData(prevData => ({\r\n                    ...prevData,\r\n                    labels: Object.keys(data),\r\n                    datasets: prevData.datasets.map(dataset => ({\r\n                        ...dataset,\r\n                        data: Object.values(data)\r\n                    }))\r\n                }));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching traffic condition data:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTrafficConditionData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Traffic Condition Distribution</h2>\r\n            <Pie data={chartData} />\r\n            {/* Legend can be added here */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PieChart;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IACvCW,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CAAC;MACPC,KAAK,EAAE,oBAAoB;MAC3BC,IAAI,EAAE,EAAE;MACRC,eAAe,EAAE,CACb,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,CAC5B;MACDC,WAAW,EAAE,CACT,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,CAC1B;MACDC,WAAW,EAAE;IACjB,CAAC;EACL,CAAC,CAAC;EAEF,MAAMC,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,CAAC;MAC7E,MAAMN,IAAI,GAAG,MAAMK,QAAQ,CAACE,IAAI,CAAC,CAAC;MAClC,IAAIP,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,CAACQ,KAAK,CAACC,OAAO,CAACT,IAAI,CAAC,EAAE;QAC1DJ,YAAY,CAACc,QAAQ,KAAK;UACtB,GAAGA,QAAQ;UACXb,MAAM,EAAEc,MAAM,CAACC,IAAI,CAACZ,IAAI,CAAC;UACzBF,QAAQ,EAAEY,QAAQ,CAACZ,QAAQ,CAACe,GAAG,CAACC,OAAO,KAAK;YACxC,GAAGA,OAAO;YACVd,IAAI,EAAEW,MAAM,CAACI,MAAM,CAACf,IAAI;UAC5B,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;MACP;IACJ,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAClE;EACJ,CAAC;EAED7B,SAAS,CAAC,MAAM;IACZiB,yBAAyB,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvC9B,OAAA,CAACJ,GAAG;MAACY,IAAI,EAAEL;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvB,CAAC;AAEd,CAAC;AAAC5B,EAAA,CAlDID,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAoDd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}