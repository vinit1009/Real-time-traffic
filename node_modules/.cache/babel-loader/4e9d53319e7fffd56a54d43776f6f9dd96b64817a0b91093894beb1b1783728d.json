{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahv\\\\Documents\\\\real-time-traffic\\\\frontend\\\\src\\\\components\\\\PieChart.js\",\n  _s = $RefreshSig$();\n// src/components/PieChart.js\nimport React, { useState, useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PieChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const fetchTrafficConditionData = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/traffic_data/conditions');\n      const data = await response.json();\n      setChartData({\n        labels: Object.keys(data),\n        datasets: [{\n          label: 'Traffic Conditions',\n          data: Object.values(data),\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\n          borderWidth: 1\n        }]\n      });\n    } catch (error) {\n      console.error('Error fetching traffic condition data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTrafficConditionData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Traffic Condition Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(PieChart, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","useState","useEffect","Pie","Chart","ChartJS","jsxDEV","_jsxDEV","PieChart","_s","chartData","setChartData","fetchTrafficConditionData","response","fetch","data","json","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shahv/Documents/real-time-traffic/frontend/src/components/PieChart.js"],"sourcesContent":["// src/components/PieChart.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS } from 'chart.js/auto';\r\n\r\nconst PieChart = () => {\r\n    const [chartData, setChartData] = useState({});\r\n\r\n    const fetchTrafficConditionData = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/traffic_data/conditions');\r\n            const data = await response.json();\r\n            setChartData({\r\n                labels: Object.keys(data),\r\n                datasets: [{\r\n                    label: 'Traffic Conditions',\r\n                    data: Object.values(data),\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                    ],\r\n                    borderWidth: 1,\r\n                }],\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching traffic condition data:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTrafficConditionData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Traffic Condition Distribution</h2>\r\n            <Pie data={chartData} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PieChart;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9C,MAAMW,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,CAAC;MAC7E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,YAAY,CAAC;QACTM,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC;QACzBK,QAAQ,EAAE,CAAC;UACPC,KAAK,EAAE,oBAAoB;UAC3BN,IAAI,EAAEG,MAAM,CAACI,MAAM,CAACP,IAAI,CAAC;UACzBQ,eAAe,EAAE,CACb,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,CAC5B;UACDC,WAAW,EAAE,CACT,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,CAC1B;UACDC,WAAW,EAAE;QACjB,CAAC;MACL,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAClE;EACJ,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACZU,yBAAyB,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAAqB,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCzB,OAAA,CAACJ,GAAG;MAACY,IAAI,EAAEL;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEd,CAAC;AAACvB,EAAA,CAxCID,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}