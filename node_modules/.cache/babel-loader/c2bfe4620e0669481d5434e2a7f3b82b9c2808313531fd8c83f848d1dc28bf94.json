{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahv\\\\Documents\\\\real-time-traffic\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LineChart from './LineChart';\nimport PieChart from './PieChart';\nimport Heatmap from './Heatmap';\nimport DateRangePicker from './DateRangePicker';\nimport Dropdown from './Dropdown';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [dateRange, setDateRange] = useState({\n    startDate: new Date(),\n    endDate: new Date()\n  });\n  const [selectedCondition, setSelectedCondition] = useState('All');\n  const [trafficData, setTrafficData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setError(null);\n      const params = new URLSearchParams({\n        startDate: dateRange.startDate ? dateRange.startDate.toISOString() : '',\n        endDate: dateRange.endDate ? dateRange.endDate.toISOString() : '',\n        condition: selectedCondition\n      });\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/traffic_data`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setTrafficData(data);\n      } catch (error) {\n        setError('Failed to fetch data: ' + error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [dateRange, selectedCondition]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Traffic Analysis Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"dashboard-filters\",\n      children: [/*#__PURE__*/_jsxDEV(DateRangePicker, {\n        onChange: setDateRange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        label: \"Traffic Condition\",\n        options: ['All', 'Congested', 'Slow-moving', 'Free-flowing'],\n        onChange: setSelectedCondition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-charts\",\n      children: [trafficData && /*#__PURE__*/_jsxDEV(LineChart, {\n        data: trafficData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }, this), trafficData && /*#__PURE__*/_jsxDEV(PieChart, {\n        data: trafficData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }, this), trafficData && /*#__PURE__*/_jsxDEV(Heatmap, {\n        data: trafficData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"IuRtcsnvXkxFaFSEWLpDjYCKR7E=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","PieChart","Heatmap","DateRangePicker","Dropdown","jsxDEV","_jsxDEV","Dashboard","_s","dateRange","setDateRange","startDate","Date","endDate","selectedCondition","setSelectedCondition","trafficData","setTrafficData","isLoading","setIsLoading","error","setError","fetchData","params","URLSearchParams","toISOString","condition","response","fetch","ok","Error","data","json","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","label","options","_c","$RefreshReg$"],"sources":["C:/Users/shahv/Documents/real-time-traffic/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport LineChart from './LineChart';\r\nimport PieChart from './PieChart';\r\nimport Heatmap from './Heatmap';\r\nimport DateRangePicker from './DateRangePicker';\r\nimport Dropdown from './Dropdown';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n    const [dateRange, setDateRange] = useState({ startDate: new Date(), endDate: new Date() });\r\n    const [selectedCondition, setSelectedCondition] = useState('All');\r\n    const [trafficData, setTrafficData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n            setError(null);\r\n\r\n            const params = new URLSearchParams({\r\n                startDate: dateRange.startDate ? dateRange.startDate.toISOString() : '',\r\n                endDate: dateRange.endDate ? dateRange.endDate.toISOString() : '',\r\n                condition: selectedCondition\r\n            });\r\n\r\n            try {\r\n                const response = await fetch(`http://127.0.0.1:5000/traffic_data`);\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setTrafficData(data);\r\n            } catch (error) {\r\n                setError('Failed to fetch data: ' + error.message);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [dateRange, selectedCondition]);\r\n\r\n    if (isLoading) return <div className=\"loading\">Loading...</div>;\r\n    if (error) return <div className=\"error\">Error: {error}</div>;\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <header className=\"dashboard-header\">\r\n                <h1>Traffic Analysis Dashboard</h1>\r\n            </header>\r\n            <aside className=\"dashboard-filters\">\r\n                <DateRangePicker onChange={setDateRange} />\r\n                <Dropdown \r\n                    label=\"Traffic Condition\" \r\n                    options={['All', 'Congested', 'Slow-moving', 'Free-flowing']} \r\n                    onChange={setSelectedCondition} \r\n                />\r\n                {/* Additional filter components */}\r\n            </aside>\r\n            <main className=\"dashboard-charts\">\r\n                {trafficData && <LineChart data={trafficData} />}\r\n                {trafficData && <PieChart data={trafficData} />}\r\n                {trafficData && <Heatmap data={trafficData} />}\r\n                {/* Additional chart components */}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}