{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahv\\\\Documents\\\\real-time-traffic\\\\frontend\\\\src\\\\components\\\\LineChart.js\",\n  _s = $RefreshSig$();\n// src/components/LineChart.js\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const fetchTrafficData = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/traffic_data/time_series');\n      const data = await response.json();\n      setChartData({\n        labels: data.map(item => new Date(item.timestamp).toLocaleString()),\n        datasets: [{\n          label: 'Average Traffic Speed',\n          data: data.map(item => item.average_speed),\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          borderColor: 'rgba(54, 162, 235, 1)',\n          borderWidth: 1\n        }]\n      });\n    } catch (error) {\n      console.error('Error fetching traffic data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTrafficData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Time Series Line Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(LineChart, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useEffect","Line","jsxDEV","_jsxDEV","LineChart","_s","chartData","setChartData","fetchTrafficData","response","fetch","data","json","labels","map","item","Date","timestamp","toLocaleString","datasets","label","average_speed","backgroundColor","borderColor","borderWidth","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shahv/Documents/real-time-traffic/frontend/src/components/LineChart.js"],"sourcesContent":["// src/components/LineChart.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst LineChart = () => {\r\n    const [chartData, setChartData] = useState({});\r\n\r\n    const fetchTrafficData = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/traffic_data/time_series');\r\n            const data = await response.json();\r\n            setChartData({\r\n                labels: data.map(item => new Date(item.timestamp).toLocaleString()),\r\n                datasets: [\r\n                    {\r\n                        label: 'Average Traffic Speed',\r\n                        data: data.map(item => item.average_speed),\r\n                        backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n                        borderColor: 'rgba(54, 162, 235, 1)',\r\n                        borderWidth: 1,\r\n                    },\r\n                ],\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching traffic data:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTrafficData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Time Series Line Chart</h2>\r\n            <Line data={chartData} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LineChart;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9C,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,CAAC;MAC9E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,YAAY,CAAC;QACTM,MAAM,EAAEF,IAAI,CAACG,GAAG,CAACC,IAAI,IAAI,IAAIC,IAAI,CAACD,IAAI,CAACE,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC;QACnEC,QAAQ,EAAE,CACN;UACIC,KAAK,EAAE,uBAAuB;UAC9BT,IAAI,EAAEA,IAAI,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACM,aAAa,CAAC;UAC1CC,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,uBAAuB;UACpCC,WAAW,EAAE;QACjB,CAAC;MAET,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD;EACJ,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACZQ,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B5B,OAAA,CAACF,IAAI;MAACU,IAAI,EAAEL;IAAU;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAlCID,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}